/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as t from "react";
import * as G from "react-dom";
import { useDocument as J, Draggable as L } from "@progress/kendo-react-common";
import { getSelectionOptions as Q, isInNonSelectable as U, relativeContextElement as V, getOffset as W, closestTagName as s, getColumnIndex as K, getRowIndex as D } from "./utils.mjs";
const $ = (d) => {
  var X;
  const { onRelease: E, childRef: I } = d, {
    enabled: H,
    drag: M,
    mode: i,
    cell: b
  } = Q(d.selectable), o = t.useRef(null), x = t.useRef(null), f = t.useRef({ clientX: 0, clientY: 0 }), [T, g] = t.useState(null), C = t.useRef(), y = t.useRef(!1), R = t.useRef(!1), N = t.useCallback(
    (a) => {
      const { event: e } = a;
      R.current = U(e.originalEvent.target), !(R.current || !o.current) && (C.current = V(o.current.element), f.current = {
        clientY: e.clientY,
        clientX: e.clientX
      });
    },
    []
  ), q = t.useCallback(
    (a) => {
      const { event: e } = a, { clientX: n, clientY: l } = f.current;
      if (!R.current && !(!M || i === "single") && ((Math.abs(l - e.clientY) > 5 || Math.abs(n - e.clientX) > 5) && (y.current = !0), y.current)) {
        const r = W(C.current);
        g({
          top: Math.min(l, e.clientY) - r.top,
          left: Math.min(n, e.clientX) - r.left,
          width: Math.abs(e.clientX - n),
          height: Math.abs(e.clientY - l)
        });
      }
    },
    [g, M, i]
  ), j = t.useCallback(
    (a) => {
      const { event: e } = a, { clientX: n, clientY: l } = f.current;
      if (R.current || !o.current)
        return;
      const r = o.current.element && o.current.element.ownerDocument;
      if (r) {
        if (y.current) {
          const m = Math.min(l, e.clientY), v = Math.min(n, e.clientX), h = Math.max(l, e.clientY), u = Math.max(n, e.clientX), c = x.current;
          if (!c)
            return;
          c.style.visibility = "hidden";
          const Y = r.elementFromPoint(v, m), w = r.elementFromPoint(u, h);
          if (c.style.visibility = "", !Y || !w)
            return;
          const P = s(Y, "TD"), A = s(P, "TR"), S = s(w, "TD"), B = s(S, "TR"), k = K(P), p = D(A), F = K(S), O = D(B);
          k !== void 0 && p !== void 0 && F !== void 0 && O !== void 0 && E({
            nativeEvent: e.originalEvent,
            startRowIndex: p,
            startColIndex: k,
            endRowIndex: O,
            endColIndex: F,
            altKey: e.altKey,
            shiftKey: e.shiftKey,
            ctrlKey: e.ctrlKey,
            metaKey: e.metaKey,
            mode: i,
            cell: b,
            isDrag: !0
          });
        } else {
          const m = r.elementFromPoint(n, l);
          if (!m)
            return;
          const v = s(m, "TD"), h = s(m, "TR"), u = K(v), c = D(h);
          v && h && c !== void 0 && u !== void 0 && E({
            nativeEvent: e.originalEvent,
            startRowIndex: c,
            startColIndex: u,
            endRowIndex: c,
            endColIndex: u,
            altKey: e.altKey,
            shiftKey: e.shiftKey,
            ctrlKey: e.ctrlKey,
            metaKey: e.metaKey,
            mode: i,
            cell: b,
            isDrag: !1
          });
        }
        g(null), y.current = !1, f.current = { clientX: 0, clientY: 0 };
      }
    },
    [g, i, b, E]
  ), z = J(x);
  return H ? /* @__PURE__ */ t.createElement(t.Fragment, null, /* @__PURE__ */ t.createElement(
    L,
    {
      onPress: N,
      onDrag: q,
      onRelease: j,
      ref: o,
      childRef: I
    },
    d.children
  ), T && G.createPortal(
    /* @__PURE__ */ t.createElement(
      "div",
      {
        ref: x,
        style: { ...T, position: "fixed" },
        className: "k-marquee k-marquee-color"
      }
    ),
    (X = z()) == null ? void 0 : X.body
  )) : t.cloneElement(t.Children.only(d.children), { ref: I });
};
export {
  $ as TableSelection
};
