/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const I=require("react"),o=require("@progress/kendo-react-common"),x=require("./UploadUI.js");function y(d){const n=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(d){for(const e in d)if(e!=="default"){const i=Object.getOwnPropertyDescriptor(d,e);Object.defineProperty(n,e,i.get?i:{enumerable:!0,get:()=>d[e]})}}return n.default=d,Object.freeze(n)}const m=y(I),c=-2,a=-1;class b extends m.Component{constructor(n){super(n),this._uploadUI=null,this.focus=()=>{this._uploadUI&&this._uploadUI.focus()},this.onKeyDown=(e,i)=>{const t=this.navIndex,h=Object.keys(this.props.groupedFiles),l=h.length-1,u=this.props.autoUpload||h.length===0?l:l+1,p=l+1,f=p+1,r=t===c?a:t;let s=t;switch(e.keyCode){case o.Keys.up:t>-1&&(s=r-1);break;case o.Keys.down:t<u&&(s=r+1);break;case o.Keys.left:i?t===p&&(s=r+1):t===f&&(s=r-1);break;case o.Keys.right:i?t===f&&(s=r-1):t===p&&(s=r+1);break;case o.Keys.enter:if(t===a||t===c){const v=o.getActiveElement(document);this.actionElement&&o.canUseDOM&&(v==null?void 0:v.className.indexOf("k-upload-button"))===-1&&this.actionElement.click()}t>=0&&t<=l&&this.onRetry(h[t]);break;case o.Keys.space:(t===a||t===c)&&this.actionElement&&this.actionElement.click(),e.preventDefault();break;case o.Keys.tab:s=c;break;case o.Keys.delete:t>=0&&t<=l&&(s=r-1,this.onRemove(h[t]));break;case o.Keys.esc:t>=0&&t<=l&&(s=r-1,this.onCancel(h[t]));break}this.navIndex=s},this.onCancel=e=>{this.props.onCancel&&this.props.onCancel.call(void 0,e)},this.onClear=()=>{this.navIndex=a,this.props.onClear&&this.props.onClear.call(void 0)},this.onUpload=()=>{this.navIndex=a,this.props.onUpload&&this.props.onUpload.call(void 0)},this.onRetry=e=>{this.props.onRetry&&this.props.onRetry.call(void 0,e)},this.onRemove=e=>{this.navIndex=this.navIndex>a?this.navIndex-1:a,this.props.onRemove&&this.props.onRemove.call(void 0,e)},this.onAdd=e=>{this.navIndex=a,this.props.onAdd&&this.props.onAdd.call(void 0,e)},this.onClick=e=>{this.navIndex=e},this.onFocus=()=>{this._blurTimeout&&(clearTimeout(this._blurTimeout),this._blurTimeout=void 0)},this.onBlurTimeout=()=>{this.navIndex=c,this._blurTimeout=void 0},this.onBlur=()=>{clearTimeout(this._blurTimeout),this._blurTimeout=window.setTimeout(this.onBlurTimeout)},this._navIndex=c}get navIndex(){return this._navIndex}set navIndex(n){const e=this.navIndex;this._navIndex=n,n!==e&&this.forceUpdate()}get actionElement(){if(this._uploadUI)return this._uploadUI.actionElement}componentDidUpdate(n){const e=Object.keys(n.groupedFiles).length,i=Object.keys(this.props.groupedFiles).length;e>i&&this.navIndex>a&&(this.navIndex=this.navIndex-(e-i))}render(){const{onClear:n,onRemove:e,onRetry:i,onCancel:t,onUpload:h,onAdd:l,...u}=this.props;return m.createElement(x.UploadUI,{ref:p=>this._uploadUI=p,className:this.props.className,onKeyDown:this.onKeyDown,navigationIndex:this.navIndex,notFocusedIndex:c,onAdd:this.onAdd,onClear:this.onClear,onUpload:this.onUpload,onRemove:this.onRemove,onRetry:this.onRetry,onCancel:this.onCancel,onClick:this.onClick,onFocus:this.onFocus,onBlur:this.onBlur,...u})}}exports.UploadNavigation=b;
