/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as n from "react";
import { classNames as m } from "@progress/kendo-react-common";
import { provideLocalizationService as p, registerForLocalization as h } from "@progress/kendo-react-intl";
import { Button as f } from "@progress/kendo-react-buttons";
import { select as c, messages as I } from "./messages/index.mjs";
import { UploadInput as g } from "./UploadInput.mjs";
const x = (i) => /* @__PURE__ */ n.createElement("span", { "aria-hidden": !0 }, i.message);
class _ extends n.Component {
  constructor() {
    super(...arguments), this._element = null, this._uploadInput = null, this.focus = () => {
      this._element && this._element.focus();
    }, this.onClick = () => {
      this.actionElement && this.actionElement.click(), this.props.onClick.call(void 0, this.props.addButtonIndex);
    }, this.onInputMouseDown = (e) => {
      this._element && (e.preventDefault(), this._element.focus());
    };
  }
  get actionElement() {
    if (this._uploadInput)
      return this._uploadInput.actionElement;
  }
  componentDidUpdate(e) {
    const { navigationIndex: o, addButtonIndex: s, notFocusedIndex: t } = this.props;
    o !== e.navigationIndex && e.navigationIndex !== t && o === s && this._element && this._element.focus();
  }
  render() {
    const { navigationIndex: e, addButtonIndex: o, tabIndex: s, id: t, selectMessageUI: a, ...r } = this.props, l = p(this).toLanguageString(c, I[c]), u = a || x;
    return /* @__PURE__ */ n.createElement("div", { className: "k-upload-button-wrap" }, /* @__PURE__ */ n.createElement(
      f,
      {
        type: "button",
        id: t ? `${t}-select-button` : "select-button",
        className: m(
          "k-upload-button",
          e === o ? "k-focus" : ""
        ),
        themeColor: "base",
        tabIndex: s,
        onClick: this.onClick,
        "aria-label": l
      },
      /* @__PURE__ */ n.createElement(u, { message: l })
    ), /* @__PURE__ */ n.createElement(
      g,
      {
        id: t ? `${t}-files` : "files",
        ...r,
        onMouseDown: this.onInputMouseDown,
        ref: (d) => this._uploadInput = d
      }
    ));
  }
}
h(_);
export {
  _ as UploadAddButton
};
