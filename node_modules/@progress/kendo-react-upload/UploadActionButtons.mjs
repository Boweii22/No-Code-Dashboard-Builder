/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as n from "react";
import { classNames as l } from "@progress/kendo-react-common";
import { provideLocalizationService as h, registerForLocalization as f } from "@progress/kendo-react-intl";
import { clearSelectedFiles as c, messages as d, uploadSelectedFiles as u } from "./messages/index.mjs";
class b extends n.Component {
  constructor() {
    super(...arguments), this._uploadElement = null, this._clearElement = null, this.onClearClick = () => {
      this.props.disabled || this.props.onClear && this.props.onClear.call(void 0);
    }, this.onUploadClick = () => {
      this.props.disabled || (this.props.onClick.call(void 0, this.props.uploadButtonIndex), this.props.onUpload && this.props.onUpload.call(void 0));
    };
  }
  componentDidUpdate(e) {
    const { navigationIndex: t, clearButtonIndex: s, uploadButtonIndex: i } = this.props;
    t !== e.navigationIndex && (t === s && this._clearElement && this._clearElement.focus(), t === i && this._uploadElement && this._uploadElement.focus());
  }
  render() {
    const { disabled: e, navigationIndex: t, clearButtonIndex: s, uploadButtonIndex: i, actionsLayout: o } = this.props, r = h(this), p = l(
      "k-actions",
      "k-hstack",
      {
        "k-justify-content-start": o === "start",
        "k-justify-content-center": o === "center",
        "k-justify-content-end": o === "end",
        "k-justify-content-stretch": o === "stretched"
      }
    ), m = l(
      "k-button k-button-md k-rounded-md k-button-solid k-button-solid-base",
      "k-clear-selected",
      e ? "k-disabled" : "",
      t === s ? "k-focus" : ""
    ), k = l(
      "k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary",
      "k-primary",
      "k-upload-selected",
      e ? "k-disabled" : "",
      t === i ? "k-focus" : ""
    );
    return /* @__PURE__ */ n.createElement("div", { className: p }, /* @__PURE__ */ n.createElement(
      "button",
      {
        ref: (a) => this._clearElement = a,
        type: "button",
        className: m,
        tabIndex: -1,
        onClick: this.onClearClick
      },
      r.toLanguageString(c, d[c])
    ), /* @__PURE__ */ n.createElement(
      "button",
      {
        ref: (a) => this._uploadElement = a,
        type: "button",
        className: k,
        tabIndex: -1,
        onClick: this.onUploadClick
      },
      r.toLanguageString(u, d[u])
    ));
  }
}
f(b);
export {
  b as UploadActionButtons
};
