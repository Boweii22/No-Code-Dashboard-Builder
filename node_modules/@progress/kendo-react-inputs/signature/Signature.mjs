/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import { SignaturePad as ze } from "@progress/kendo-inputs-common";
import { Button as D } from "@progress/kendo-react-buttons";
import { createPropsContext as Ee, validatePackage as Se, usePropsContext as Oe, useIsomorphicLayoutEffect as xe, dispatchEvent as C, classNames as we, kendoThemeMaps as Q, getTabIndex as Le, noop as f, Keys as Ie } from "@progress/kendo-react-common";
import { Dialog as Me } from "@progress/kendo-react-dialogs";
import { useLocalization as Pe } from "@progress/kendo-react-intl";
import a from "prop-types";
import * as o from "react";
import { signatureMaximize as Y, messages as T, signatureMinimize as Z, signatureClear as ee } from "../messages/index.mjs";
import { packageMetadata as De } from "../package-metadata.mjs";
import { hasParent as Te } from "./utils/index.mjs";
import { hyperlinkOpenIcon as te, xIcon as Re } from "@progress/kendo-svg-icons";
const Be = 250, _e = 84, ne = 3, ae = 2, Fe = "#000000", Ne = "#ffffff", oe = (c) => c !== void 0, Ge = Ee(), h = o.forwardRef((c, re) => {
  Se(De);
  const e = Oe(Ge, c), z = Pe(), s = o.useRef(null), p = o.useRef(null), R = o.useRef(null), B = o.useRef(null), _ = o.useRef(null), [r, ie] = o.useState(), [g, F] = o.useState(!1), [E, N] = o.useState(!1), [b, G] = o.useState(), [se, le] = o.useState(), q = oe(e.value) ? e.value : b, [ce, ue] = o.useState(!1), m = oe(e.open), d = m ? e.open : ce, de = !(e.maximized || E || !e.maximizable || e.disabled), me = e.maximized && !E, fe = !(!(e.value || b) || E || e.readOnly || e.disabled), A = z.toLanguageString(Y, T[Y]), V = z.toLanguageString(Z, T[Z]), j = z.toLanguageString(ee, T[ee]), S = e.popupScale || ne, O = e.exportScale || ae, x = (t) => {
    G(t), e.onChange && e.onChange({ value: t });
  }, pe = (t) => {
    r == null || r.loadImage(t.value), x(t.value);
  };
  o.useEffect(() => {
    e.value !== b && (G(e.value), r == null || r.loadImage(e.value));
  }, [e.value]);
  const ge = () => {
    r == null || r.clear(), x();
  }, k = o.useCallback(
    (t) => {
      m || ue(t);
    },
    [m]
  ), be = (t) => {
    var n, i;
    $(t), (i = ((n = _.current) == null ? void 0 : n.element) || p.current) == null || i.focus();
  }, w = o.useCallback(() => {
    let t = Fe;
    return !e.color && typeof document != "undefined" && s.current && (t = getComputedStyle(s.current).color), e.color || t;
  }, [e.color]), L = o.useCallback(() => {
    let t = Ne;
    return !e.backgroundColor && typeof document != "undefined" && s.current && (t = getComputedStyle(s.current).backgroundColor), e.backgroundColor || t;
  }, [e.backgroundColor]), U = () => ({
    scale: e.maximized ? e.popupScale : 1,
    color: w(),
    backgroundColor: L(),
    strokeWidth: e.strokeWidth,
    smooth: e.smooth,
    readonly: e.readOnly
  }), W = async (t) => {
    const { width: n, height: i } = t;
    return await (r == null ? void 0 : r.exportImage({
      width: n * O,
      height: i * O
    }));
  };
  o.useEffect(() => {
    const t = p.current, n = new ze(t, U());
    return q && n.loadImage(q), ie(n), () => n.destroy();
  }, []), o.useEffect(() => {
    r == null || r.setOptions({
      onChange: async () => x(await W(X())),
      onDraw: () => N(!0),
      onDrawEnd: () => N(!1)
    });
  }, [r]), xe(
    () => r == null ? void 0 : r.setOptions(U()),
    [e.readOnly, e.color, e.backgroundColor, e.strokeWidth, e.smooth]
  ), o.useEffect(() => {
    var i, u;
    const t = (u = (i = R.current) == null ? void 0 : i.element) == null ? void 0 : u.querySelector(".k-overlay");
    if (!t)
      return;
    const n = () => k(!1);
    return t.addEventListener("click", n), () => t.removeEventListener("click", n);
  }, [d]), o.useEffect(() => {
    if (!d || typeof document == "undefined")
      return;
    const t = (n) => {
      n.keyCode === Ie.esc && k(!1);
    };
    return document.addEventListener("keydown", t), () => document.removeEventListener("keydown", t);
  }, [d]), o.useEffect(() => {
    var t, n;
    e.maximized && ((n = (t = B.current) == null ? void 0 : t.element) == null || n.focus());
  }, []);
  const I = o.useCallback(
    () => {
      var t;
      return (t = p.current) == null ? void 0 : t.focus();
    },
    []
  ), v = o.useCallback(
    () => e.value,
    [e.value]
  ), H = o.useCallback(
    () => e.name,
    [e.name]
  ), y = o.useCallback(
    () => e.required,
    [e.required]
  ), M = o.useCallback(
    () => {
      const t = e.validationMessage !== void 0, i = !v(), u = e.valid !== void 0 ? e.valid : !y() || !i;
      return {
        customError: t,
        valid: u,
        valueMissing: i
      };
    },
    [e.validationMessage, e.valid, v, y]
  ), P = o.useCallback(
    () => e.validityStyles,
    [e.validityStyles]
  ), K = o.useCallback(
    () => e,
    [e]
  ), l = o.useCallback(
    () => {
      const t = {
        element: s.current,
        focus: I
      };
      return Object.defineProperty(t, "name", { get: H }), Object.defineProperty(t, "value", { get: v }), Object.defineProperty(t, "validity", { get: M }), Object.defineProperty(t, "validityStyles", { get: P }), Object.defineProperty(t, "required", { get: y }), Object.defineProperty(t, "props", { get: K }), Object.defineProperty(t, "color", { get: w }), Object.defineProperty(t, "backgroundColor", { get: L }), t;
    },
    [H, v, M, P, y, I, K, w, L]
  );
  o.useImperativeHandle(re, l);
  const ke = o.useCallback(
    (t) => {
      g || e.maximized || (F(!0), C(
        e.onFocus,
        t,
        l(),
        {}
      ));
    },
    [g, e.onFocus, l]
  ), ve = o.useCallback(
    (t) => {
      Te(t.relatedTarget, s.current) || (F(!1), C(
        e.onBlur,
        t,
        l(),
        {}
      ));
    },
    [g, e.onBlur, l]
  ), ye = o.useCallback(
    async (t) => {
      le(await W(J())), k(!0), C(
        e.onOpen,
        t,
        l(),
        {}
      );
    },
    [d, m, e.onOpen, e.value, b, l]
  ), $ = o.useCallback(
    (t) => {
      k(!1), C(
        e.onClose,
        t,
        l(),
        {}
      );
    },
    [d, m, e.onClose, l]
  ), Ce = () => {
    ge(), I();
  }, X = () => {
    var i, u;
    const t = e.width || ((i = s.current) == null ? void 0 : i.offsetWidth) || Be, n = e.height || ((u = s.current) == null ? void 0 : u.offsetHeight) || _e;
    return {
      width: t,
      height: n
    };
  }, J = () => {
    const { width: t, height: n } = X();
    return {
      width: t * S,
      height: n * S
    };
  }, he = !P() || M().valid;
  return /* @__PURE__ */ o.createElement(
    "div",
    {
      ref: s,
      dir: e.dir,
      style: { width: e.width, height: e.height, ...e.style },
      className: we(
        "k-input",
        "k-signature",
        {
          "k-signature-maximized": e.maximized,
          [`k-signature-${Q.sizeMap[e.size] || e.size}`]: e.size,
          [`k-input-${e.fillMode}`]: e.fillMode,
          [`k-rounded-${Q.roundedMap[e.rounded] || e.rounded}`]: e.rounded,
          "k-invalid": !he,
          "k-required": e.required,
          "k-disabled": e.disabled,
          "k-focus": g
        },
        e.className
      ),
      onFocus: ke,
      onBlur: ve
    },
    /* @__PURE__ */ o.createElement(
      "div",
      {
        className: "k-signature-canvas",
        ref: p,
        tabIndex: Le(e.tabIndex, e.disabled),
        role: "img",
        id: e.id,
        "aria-label": e.ariaLabel,
        "aria-labelledby": e.ariaLabelledBy,
        "aria-describedby": e.ariaDescribedBy,
        "aria-disabled": e.disabled ? "true" : void 0
      }
    ),
    /* @__PURE__ */ o.createElement("div", { className: "k-signature-actions k-signature-actions-top" }, de && /* @__PURE__ */ o.createElement(
      D,
      {
        type: "button",
        className: "k-signature-action k-signature-maximize",
        ref: _,
        icon: "hyperlink-open",
        svgIcon: te,
        fillMode: "flat",
        size: e.size,
        onClick: ye,
        "aria-label": A,
        title: A
      }
    ), me && /* @__PURE__ */ o.createElement(
      D,
      {
        type: "button",
        className: "k-signature-action k-signature-minimize k-rotate-180",
        ref: B,
        icon: "hyperlink-open",
        svgIcon: te,
        fillMode: "flat",
        size: e.size,
        onClick: $,
        "aria-label": V,
        title: V
      }
    )),
    !e.hideLine && /* @__PURE__ */ o.createElement(
      "div",
      {
        className: "k-signature-line",
        style: { zIndex: 2, pointerEvents: "none" }
      }
    ),
    /* @__PURE__ */ o.createElement("div", { className: "k-signature-actions k-signature-actions-bottom" }, fe && /* @__PURE__ */ o.createElement(
      D,
      {
        type: "button",
        className: "k-signature-action k-signature-clear",
        icon: "x",
        svgIcon: Re,
        fillMode: "flat",
        size: e.size,
        onClick: Ce,
        "aria-label": j,
        title: j
      }
    )),
    d && /* @__PURE__ */ o.createElement(Me, { ref: R }, /* @__PURE__ */ o.createElement(
      h,
      {
        ...e,
        ...J(),
        value: se,
        maximized: !0,
        exportScale: 1 / S * O,
        open: !1,
        onChange: pe,
        onClose: be
      }
    ))
  );
});
h.propTypes = {
  value: a.string,
  width: a.number,
  height: a.number,
  tabIndex: a.number,
  dir: a.string,
  ariaDescribedBy: a.string,
  ariaLabelledBy: a.string,
  ariaLabel: a.string,
  readOnly: a.bool,
  disabled: a.bool,
  validationMessage: a.string,
  required: a.bool,
  onChange: a.func,
  onFocus: a.func,
  onBlur: a.func,
  onOpen: a.func,
  onClose: a.func,
  size: a.oneOf([null, "small", "medium", "large"]),
  rounded: a.oneOf([null, "small", "medium", "large"]),
  fillMode: a.oneOf([null, "solid", "flat", "outline"])
};
h.displayName = "KendoSignature";
h.defaultProps = {
  strokeWidth: 1,
  smooth: !1,
  popupScale: ne,
  exportScale: ae,
  maximizable: !0,
  disabled: !1,
  required: !1,
  validityStyles: !0,
  onChange: (c) => f,
  onFocus: (c) => f,
  onBlur: (c) => f,
  onOpen: (c) => f,
  onClose: (c) => f,
  size: "medium",
  rounded: "medium",
  fillMode: "solid"
};
export {
  h as Signature,
  Ge as SignaturePropsContext
};
