/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const f=require("react"),e=require("prop-types"),l=require("@progress/kendo-react-common"),m=require("./package-metadata.js"),r=require("@progress/kendo-svg-icons");function d(a){const t=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(a){for(const n in a)if(n!=="default"){const o=Object.getOwnPropertyDescriptor(a,n);Object.defineProperty(t,n,o.get?o:{enumerable:!0,get:()=>a[n]})}}return t.default=a,Object.freeze(t)}const c=d(f),y="Close",b={success:"check-outline",error:"x-outline",info:"info-circle",warning:"exclamation-circle"},g={success:r.checkOutlineIcon,error:r.xOutlineIcon,info:r.infoCircleIcon,warning:r.exclamationCircleIcon},s=class s extends c.Component{constructor(t){super(t),l.validatePackage(m.packageMetadata)}render(){const{onClose:t,className:n,closable:o=s.defaultProps.closable,type:i=s.defaultProps.type}=this.props;return c.createElement("div",{dir:this.props.dir,className:"k-notification"+(n?` ${n}`:"")+(i.style==="none"?"":` k-notification-${i.style}`)+(o?" k-notification-closable":""),style:this.props.style},i.icon&&c.createElement(l.IconWrap,{className:"k-notification-status",name:b[i.style],icon:g[i.style]}),c.createElement("div",{className:"k-notification-content"},this.props.children),c.createElement("span",{className:"k-notification-actions"},o&&c.createElement("span",{className:"k-notification-action k-notification-close-action",title:y,onClick:u=>{t&&t.call(void 0,{target:this,syntheticEvent:u,nativeEvent:u.nativeEvent})},...typeof o!="boolean"?o:{}},c.createElement(l.IconWrap,{name:"x",icon:r.xIcon}))))}};s.propTypes={className:e.string,closable:e.oneOfType([e.bool,e.object]),dir:e.string,style:e.object,type:e.shape({style:e.oneOf(["none","success","error","warning","info"]),icon:e.bool}),onClose:e.func},s.defaultProps={closable:!1,type:{style:"none",icon:!0}};let p=s;exports.Notification=p;
