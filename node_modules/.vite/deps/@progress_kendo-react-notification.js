"use client";
import {
  checkOutlineIcon,
  exclamationCircleIcon,
  infoCircleIcon,
  xIcon,
  xOutlineIcon
} from "./chunk-ILHBWX6Z.js";
import {
  l4 as l,
  require_prop_types,
  v2 as v
} from "./chunk-IBO4PJA7.js";
import "./chunk-2ZFG6UXX.js";
import "./chunk-PJEEZAML.js";
import {
  require_react
} from "./chunk-DRWLMN53.js";
import {
  __toESM
} from "./chunk-G3PMV62Z.js";

// node_modules/@progress/kendo-react-notification/Notification.mjs
var t = __toESM(require_react(), 1);
var import_prop_types = __toESM(require_prop_types(), 1);

// node_modules/@progress/kendo-react-notification/package-metadata.mjs
var e = {
  name: "@progress/kendo-react-notification",
  productName: "KendoReact",
  productCodes: ["KENDOUIREACT", "KENDOUICOMPLETE"],
  publishDate: 1712847132,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-react-ui/components/my-license/"
};

// node_modules/@progress/kendo-react-notification/Notification.mjs
var h = "Close";
var b = {
  success: "check-outline",
  error: "x-outline",
  info: "info-circle",
  warning: "exclamation-circle"
};
var g = {
  success: checkOutlineIcon,
  error: xOutlineIcon,
  info: infoCircleIcon,
  warning: exclamationCircleIcon
};
var o = class o2 extends t.Component {
  constructor(s) {
    super(s), l(e);
  }
  /**
   * @hidden
   */
  render() {
    const {
      onClose: s,
      className: i,
      closable: c = o2.defaultProps.closable,
      type: n = o2.defaultProps.type
    } = this.props;
    return t.createElement(
      "div",
      {
        dir: this.props.dir,
        className: "k-notification" + (i ? ` ${i}` : "") + (n.style === "none" ? "" : ` k-notification-${n.style}`) + (c ? " k-notification-closable" : ""),
        style: this.props.style
      },
      n.icon && t.createElement(
        v,
        {
          className: "k-notification-status",
          name: b[n.style],
          icon: g[n.style]
        }
      ),
      t.createElement("div", { className: "k-notification-content" }, this.props.children),
      t.createElement("span", { className: "k-notification-actions" }, c && t.createElement(
        "span",
        {
          className: "k-notification-action k-notification-close-action",
          title: h,
          onClick: (a) => {
            s && s.call(void 0, {
              target: this,
              syntheticEvent: a,
              nativeEvent: a.nativeEvent
            });
          },
          ...typeof c != "boolean" ? c : {}
        },
        t.createElement(v, { name: "x", icon: xIcon })
      ))
    );
  }
};
o.propTypes = {
  className: import_prop_types.default.string,
  closable: import_prop_types.default.oneOfType([import_prop_types.default.bool, import_prop_types.default.object]),
  dir: import_prop_types.default.string,
  style: import_prop_types.default.object,
  type: import_prop_types.default.shape({
    style: import_prop_types.default.oneOf(["none", "success", "error", "warning", "info"]),
    icon: import_prop_types.default.bool
  }),
  onClose: import_prop_types.default.func
}, o.defaultProps = {
  closable: false,
  type: {
    style: "none",
    icon: true
  }
};
var r = o;

// node_modules/@progress/kendo-react-notification/NotificationGroup.mjs
var t2 = __toESM(require_react(), 1);
var import_prop_types2 = __toESM(require_prop_types(), 1);
var e3 = class e4 extends t2.Component {
  /**
   * @hidden
   */
  render() {
    const { style: a = {}, className: s } = this.props;
    return t2.createElement(
      "div",
      {
        className: "k-notification-group" + (s ? ` ${s}` : ""),
        style: {
          alignItems: "center",
          flexWrap: "wrap",
          ...a
        }
      },
      this.props.children
    );
  }
};
e3.propTypes = {
  className: import_prop_types2.default.string,
  style: import_prop_types2.default.object
};
var p = e3;
export {
  r as Notification,
  p as NotificationGroup
};
/*! Bundled license information:

@progress/kendo-react-notification/package-metadata.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2024 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-notification/Notification.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2024 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-notification/NotificationGroup.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2024 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)

@progress/kendo-react-notification/index.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2024 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)
*/
//# sourceMappingURL=@progress_kendo-react-notification.js.map
